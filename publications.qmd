---
title: "Publications"
listing:
  contents: file/publications.yml
  type: default
  sort: ["year: desc", "title: asc"]
  filter-ui: false     # on désactive l’UI par défaut pour mettre notre menu
  fields: [title, authors, year, venue, url, categories]
  field-display-names:
    title: Titre
    authors: Auteurs
    year: Année
    venue: Revue
    url: Lien
    categories: Mots-clés
---

Cette page présente mes principales publications scientifiques.\
Utilisez le menu déroulant pour filtrer par **mots-clés**. Cliquez sur **Voir toutes les publications** pour réinitialiser.

::: {#filters style="display:flex; gap:10px; align-items:center; margin: 0 0 14px 0;"}
<label for="kwSelect" style="margin:0;">Mots-clés :</label> <select id="kwSelect" multiple size="1" style="min-width:260px;"></select> <button id="resetBtn" class="btn btn-outline-secondary">Voir toutes les publications</button>
:::

```{=html}
<style>
/* 1) Réduire la taille des titres des cartes */
[data-listing] .listing-title { 
  font-size: 1.05rem; 
  line-height: 1.25; 
  margin-bottom: 0.25rem;
}
/* 2) Style doux pour les tags */
.quarto-listing-category {
  background-color: #f0f4f7;
  border-radius: 8px;
  padding: 3px 8px;
  font-size: 0.85em;
  color: #2c3e50;
}
/* 3) Ajuster l’espace au-dessus des cartes (après le bloc de filtres) */
#filters + div { margin-top: 0.5rem; }
</style>
```

```{=html}
<script>
// --- Construire la liste des mots-clés depuis les cartes ---
function getAllKeywords() {
  const set = new Set();
  document.querySelectorAll('.quarto-listing-category').forEach(el => {
    const txt = el.textContent.trim();
    if (txt) set.add(txt);
  });
  return Array.from(set).sort((a,b)=> a.localeCompare(b, 'fr'));
}

function cardKeywords(card) {
  // récupère les tags d'une carte
  const tags = Array.from(card.querySelectorAll('.quarto-listing-category'))
                    .map(el => el.textContent.trim());
  return tags;
}

function applyFilter(selected) {
  const cards = document.querySelectorAll('[data-listing] [data-listing-item]');
  cards.forEach(card => {
    const tags = cardKeywords(card);
    // si aucune sélection -> on montre tout
    const show = (selected.length === 0) || selected.some(s => tags.includes(s));
    card.style.display = show ? '' : 'none';
  });
}

document.addEventListener('DOMContentLoaded', function(){
  const select = document.getElementById('kwSelect');
  const resetBtn = document.getElementById('resetBtn');

  // peupler le select avec tous les mots-clés trouvés
  getAllKeywords().forEach(k => {
    const opt = document.createElement('option');
    opt.value = k; opt.textContent = k;
    select.appendChild(opt);
  });

  // transformer en "menu déroulant" simple : single par défaut,
  // ou garde 'multiple' si tu veux sélection multiple. Ici on garde multiple.
  select.addEventListener('change', function(){
    const selected = Array.from(this.selectedOptions).map(o => o.value);
    applyFilter(selected);
  });

  resetBtn.addEventListener('click', function(){
    // clear sélection
    Array.from(select.options).forEach(o => o.selected = false);
    applyFilter([]);
  });
});
</script>
```
